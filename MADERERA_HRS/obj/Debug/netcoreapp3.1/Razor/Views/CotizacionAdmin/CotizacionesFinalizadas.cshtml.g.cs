#pragma checksum "C:\Users\josel\source\repos\MADERERA_HRS\MADERERA_HRS\Views\CotizacionAdmin\CotizacionesFinalizadas.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "569de26d49666cc9365e091f97d13a6a66726d78"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CotizacionAdmin_CotizacionesFinalizadas), @"mvc.1.0.view", @"/Views/CotizacionAdmin/CotizacionesFinalizadas.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\josel\source\repos\MADERERA_HRS\MADERERA_HRS\Views\_ViewImports.cshtml"
using MADERERA_HRS;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\josel\source\repos\MADERERA_HRS\MADERERA_HRS\Views\_ViewImports.cshtml"
using MADERERA_HRS.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"569de26d49666cc9365e091f97d13a6a66726d78", @"/Views/CotizacionAdmin/CotizacionesFinalizadas.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fa98d2dfee75ae240d35d01ba65f82bc804d67c3", @"/Views/_ViewImports.cshtml")]
    public class Views_CotizacionAdmin_CotizacionesFinalizadas : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("/CotizacionAdmin/CotizacionesFinalizadas"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "get", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/scriptsmaderera/Notificaciones.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\josel\source\repos\MADERERA_HRS\MADERERA_HRS\Views\CotizacionAdmin\CotizacionesFinalizadas.cshtml"
   Layout = "Layout_Admin"; 

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n<footer>\r\n    <h1>Cotizaciones finalizadas</h1>\r\n    <br />\r\n    <br />\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "569de26d49666cc9365e091f97d13a6a66726d785241", async() => {
                WriteLiteral(@"
        <div class=""col-md-12"">
            <div class=""col-md-3"">
                <input type=""text"" class=""form-control"" name=""query"" placeholder=""Ingrese DNI"" />
            </div>
            <div class=""col-md-2"">
                <button class=""btn btn-primary"">Buscar</button>
            </div>
            <div class=""col-sm-2""></div>
");
                WriteLiteral("        </div>\r\n    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
    <br />
    <div class=""container"">
        <table class=""table table-hover table-bordered"">
            <thead>
                <tr>
                    <th>DNI</th>
                    <th>Cliente</th>
                    <th>Telefono</th>
                    <th>Fecha</th>
                    <th>Total</th>
                    <th>Estado</th>
                    <th>Opciones</th>
                </tr>
            </thead>
            <tbody id=""tbodycotizacion"">
");
#nullable restore
#line 37 "C:\Users\josel\source\repos\MADERERA_HRS\MADERERA_HRS\Views\CotizacionAdmin\CotizacionesFinalizadas.cshtml"
                 foreach (var item in Model)
                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                    <tr>\r\n                        <td>");
#nullable restore
#line 40 "C:\Users\josel\source\repos\MADERERA_HRS\MADERERA_HRS\Views\CotizacionAdmin\CotizacionesFinalizadas.cshtml"
                       Write(item.Usuario.DNI);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                        <td>");
#nullable restore
#line 41 "C:\Users\josel\source\repos\MADERERA_HRS\MADERERA_HRS\Views\CotizacionAdmin\CotizacionesFinalizadas.cshtml"
                       Write(item.Usuario.Nombre);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                        <td>");
#nullable restore
#line 42 "C:\Users\josel\source\repos\MADERERA_HRS\MADERERA_HRS\Views\CotizacionAdmin\CotizacionesFinalizadas.cshtml"
                       Write(item.Usuario.Telefono);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                        <td>");
#nullable restore
#line 43 "C:\Users\josel\source\repos\MADERERA_HRS\MADERERA_HRS\Views\CotizacionAdmin\CotizacionesFinalizadas.cshtml"
                       Write(item.Fecha);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                        <td>");
#nullable restore
#line 44 "C:\Users\josel\source\repos\MADERERA_HRS\MADERERA_HRS\Views\CotizacionAdmin\CotizacionesFinalizadas.cshtml"
                       Write(item.Total);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                        <td>");
#nullable restore
#line 45 "C:\Users\josel\source\repos\MADERERA_HRS\MADERERA_HRS\Views\CotizacionAdmin\CotizacionesFinalizadas.cshtml"
                       Write(item.Estado.Nombre);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                        <td>\r\n                            <button type=\"button\" class=\"verdetallecotizacion btn btn-success\" data-toggle=\"modal\" data-target=\".bd-example-modal-xl\" data-idcotizacion=\"");
#nullable restore
#line 47 "C:\Users\josel\source\repos\MADERERA_HRS\MADERERA_HRS\Views\CotizacionAdmin\CotizacionesFinalizadas.cshtml"
                                                                                                                                                                    Write(item.Id_Cotizacion);

#line default
#line hidden
#nullable disable
            WriteLiteral("\"><span class=\"fa fa-eye\"></span> ver productos</button>\r\n");
            WriteLiteral("                            <button type=\"button\" class=\"registrarcomopedido btn btn-warning\" style=\"margin-top:2px\" data-toggle=\"modal\" data-target=\"#exampleModal\" data-idcotizacion=\"");
#nullable restore
#line 49 "C:\Users\josel\source\repos\MADERERA_HRS\MADERERA_HRS\Views\CotizacionAdmin\CotizacionesFinalizadas.cshtml"
                                                                                                                                                                                   Write(item.Id_Cotizacion);

#line default
#line hidden
#nullable disable
            WriteLiteral("\"><span class=\"glyphicon glyphicon-play\"></span>  Registrar como pedido</button>\r\n                            <a class=\"eliminarcotizacion btn btn-danger\" data-idcotizacion=\"");
#nullable restore
#line 50 "C:\Users\josel\source\repos\MADERERA_HRS\MADERERA_HRS\Views\CotizacionAdmin\CotizacionesFinalizadas.cshtml"
                                                                                       Write(item.Id_Cotizacion);

#line default
#line hidden
#nullable disable
            WriteLiteral("\"><span class=\"glyphicon glyphicon-trash\"></span></a>\r\n                        </td>\r\n                    </tr>\r\n");
#nullable restore
#line 53 "C:\Users\josel\source\repos\MADERERA_HRS\MADERERA_HRS\Views\CotizacionAdmin\CotizacionesFinalizadas.cshtml"
                }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"            </tbody>
        </table>
    </div>


    <!-- Extra large modal para listar todos mis productos que debo cotizar-->
    <div class=""modal fade bd-example-modal-xl"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myExtraLargeModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog modal-xl"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""exampleModalLabel"">Productos a cotizar</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <table class=""table table-hover"">
                        <thead>
                            <tr>
                                <th>Imagen</th>
                                <th>Producto</th>
                                <th>Medidas</");
            WriteLiteral(@"th>
                                <th>Cantidad</th>
                                <th>Precio Unit.</th>
                                <th>Subtotal</th>
                                <th>Descripción</th>
                                <th> Opciones </th>
                            </tr>
                        </thead>
                        <tbody id=""tbodylistaproductosacotizar"">
                        </tbody>
                    </table>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Cerrar</button>
");
            WriteLiteral(@"                </div>
            </div>
        </div>
    </div>

    <!--MODAL PARA PONER EL PRECIO DE COTIZACION DE MI PRODUCTO A COTIZAR-->
    <!-- Button trigger modal -->
    <!-- Modal -->
    <div class=""modal fade"" id=""exampleModalCenter"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalCenterTitle"" aria-hidden=""true"">
        <div class=""modal-dialog modal-dialog-centered"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""exampleModalLabel"">Ingrese precio unitario del producto a cotizar</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <input type=""number"" class=""form-control"" id=""inputcotizaciondepedido"" name=""inputcotizaciondepedido"" pattern=""[0-9");
            WriteLiteral(@"]+"" />
                </div>
                <div class=""modal-footer"">
                    <button id=""cerrarmodaldeitemacotizar"" type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Cerrar</button>
                    <button id=""confirmarcotizacionitemdetallecotizacion"" type=""button"" class=""btn btn-primary"">Registrar cotización</button>
                </div>
            </div>
        </div>
    </div>
    <!--Modal para mostrar la imagen de mi producto------------------->
    <!-- Large modal -->

    <div class=""modal fade bd-example-modal-lg"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myLargeModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog modal-lg"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""exampleModalLabel"">Imagen de mi producto a cotizar</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span");
            WriteLiteral(@" aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"" id=""mostrarimagen"">

                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Cerrar</button>
                </div>
            </div>
        </div>
    </div>

    <!--Modal para hacer la confirmación de mi pedido luego de ser cotizado-->
    <!-- Modal -->
    <div class=""modal fade"" id=""exampleModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""exampleModalLabel"">Para confirmar registro</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</s");
            WriteLiteral(@"pan>
                    </button>
                </div>
                <div class=""modal-body"" id=""modalbodyregistrarcotizacioncomopedido"">

                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div>
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
    </div>

</footer>
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "569de26d49666cc9365e091f97d13a6a66726d7817998", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "569de26d49666cc9365e091f97d13a6a66726d7819038", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            WriteLiteral(@"<!-- CSS only -->

<script>
        var idcotizacion = 0;
        var iddetallecotizacion = 0;
        $(""body"").on(""click"", "".verimagendeproductoacotizar"", function (e) {
            e.preventDefault();
            var $this = $(this);
            iddetallecotizacion = $this.data(""iddetallecotizacion"");
            var request = $.ajax({
                url: '/LlamadasAjax/ObtenerImagenDeProducto?iddetalle=' + iddetallecotizacion
            });
            request.done(function (resp) {
                if (resp != null) {
                    $(""#mostrarimagen"").html('<img src=""' + resp +'"" />');
                }
            });

        });

    $(""body"").on(""click"", "".registrarcomopedido"", function (e) {
        var $this = $(this)
        e.preventDefault();
        var idcotizacion = $this.data(""idcotizacion"");

        $(""#modalbodyregistrarcotizacioncomopedido"").html(
            `
                        <form action=""/CotizacionAdmin/ConfirmarCotizacionComoPedido?idcotizac");
            WriteLiteral(@"ion=${idcotizacion}"" method=""post"">
                        <div class=""container"">
                            <div>
                                <label>Ingrese una fecha solicitada para entregar su pedido</label>
                                <input type=""date"" name=""Fecha_Entrega_Solicitada"" class=""form-control"" required id=""imagedoc"" accept=""image,jpg,png"" />
                            </div>
                            <br />
                            <div>
                                <input type=""text"" name=""Telefono_Comunicacion"" class=""form-control"" placeholder=""Ingrese el telefono que más usa para comunicación"" required />
                            </div>
                            <br />
                            <div>
                                <input type=""text"" name=""Direccion_Entrega"" class=""form-control"" placeholder=""Ingrese dirección donde recibirá su producto"" required />
                            </div>
                            <div>
                ");
            WriteLiteral("                <br />\r\n                                <button class=\"btn btn-primary pull-right\" ");
            WriteLiteral(@"><span class=""fa fa-save""> Confirmar registro</span></button>
                            </div>
                        </div>
                    </form>
                        `
        );
    });

        $(""body"").on(""click"", "".eliminarcotizacion"", function (e) {
            e.preventDefault();
            var $this = $(this);
            idcotizacion = $this.data(""idcotizacion"");

            Swal.fire({
                title: 'Estas seguro?',
                text: ""No podrás revertir esto!"",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                cancelButtonText: 'Cancelar',
                confirmButtonText: 'Si, eliminar cotización!'
            }).then((result) => {
                if (result.value) {
                    location.href = ""/CotizacionAdmin/Eliminar?idcotizacion="" + idcotizacion + ""&&Vista=CotizacionesFinalizadas"";
                }
    ");
            WriteLiteral(@"        })
        });

        $(""body"").on(""click"", "".iniciarcontruccionpedido"", function (e) {
            e.preventDefault();
            var $this = $(this);
            var idpedido = $this.data(""idpedido"");

            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            })

            swalWithBootstrapButtons.fire({
                title: 'Estas seguro?',
                text: ""No podras revertir esto!"",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Si, iniciar construcción!',
                cancelButtonText: 'No, cancelar!',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    location.href = ""/PedidoAdmin/IniciarConstruccion?idpedido="" ");
            WriteLiteral(@"+ idpedido;
                }
            })
        });

        $(""body"").on(""click"", "".verdetallecotizacion"", function (e) {
            var $this = $(this)
            e.preventDefault();
            idcotizacion = $this.data(""idcotizacion"");

            var request = $.ajax({
                url: '/LlamadasAjax/ObtenerDetalleCotizacionAdmin?idcotizacion=' + idcotizacion
            });
            request.done(function (resp) {
                $(""#tbodylistaproductosacotizar"").html(resp);
            });

        });

        $(""body"").on(""click"", "".cotizaritemdetallecotizacion"", function (e) {
            var $this = $(this)
            e.preventDefault();
            iddetallecotizacion = $this.data(""iddetallecotizacion"");
            idcotizacion = $this.data(""idcotizacion"");
        });

        $(""#confirmarcotizacionitemdetallecotizacion"").click(function (e) {
            e.preventDefault();
            var inputcantidad = $(""#inputcotizaciondepedido"").val();

       ");
            WriteLiteral(@"     if (inputcantidad > 0) {
                var request1 = $.ajax({
                    url: '/LlamadasAjax/ConfirmarCotizaciondeitemDetalleCotizacion?iddetallecotizacion=' + iddetallecotizacion + ""&&precio="" + inputcantidad
                });
                request1.done(function (resp) {
                    if (resp == true) {
                        var request = $.ajax({
                            url: '/LlamadasAjax/ObtenerDetalleCotizacionAdmin?idcotizacion=' + idcotizacion
                        });
                        request.done(function (resp) {
                            $(""#tbodylistaproductosacotizar"").html(resp);

                            var request3 = $.ajax({
                                url: '/LlamadasAjax/ObtenerCotizacionesFinalizadasAdmin'
                            });
                            request3.done(function (resp) {
                                $(""#tbodycotizacion"").html(resp);
                            });
                           ");
            WriteLiteral(@" const Toast = Swal.mixin({
                                toast: true,
                                position: 'top-end',
                                showConfirmButton: false,
                                timer: 3000,
                                timerProgressBar: true,
                                didOpen: (toast) => {
                                    toast.addEventListener('mouseenter', Swal.stopTimer)
                                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                                }
                            })

                            Toast.fire({
                                icon: 'success',
                                title: 'Tu cotización se realizó con exito'
                            })
                            $(""#cerrarmodaldeitemacotizar"").trigger('click');
                        });
                    }

                    else {
                        Swal.fire({
                            ");
            WriteLiteral(@"icon: 'error',
                            title: 'Oops...',
                            text: 'Algo paso mal!'
                            //footer: '<a href="""">Why do I have this issue?</a>'
                        })
                    }

                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'El precio unitario debe ser mayor a cero!'
                    //footer: '<a href="""">Why do I have this issue?</a>'
                })
            }
        });

        $(""body"").on(""click"", "".actualizarcantidaddetallecotizacion"", function (e) {
            var $this = $(this)
            e.preventDefault();
            iddetallecotizacion = $this.data(""iddetallecotizacion"");
            idcotizacion = $this.data(""idcotizacion"");

            Swal.fire({
                text: 'Actualizar cantidad de producto',
                input: 'number'
            }).then(function (result");
            WriteLiteral(@") {
                if (result.value) {
                    const amount = result.value
                    if (amount > 0) {
                        var request1 = $.ajax({
                            url: '/LlamadasAjax/ActualizarCantidadDeDetalleCotizacionAdmin?iddetallecotizacion=' + iddetallecotizacion + ""&&cantidad="" + amount
                        });
                        request1.done(function (resp) {
                            if (resp == true) {
                                var request = $.ajax({
                                    url: '/LlamadasAjax/ObtenerDetalleCotizacionAdmin?idcotizacion=' + idcotizacion
                                });
                                request.done(function (resp) {
                                    $(""#tbodylistaproductosacotizar"").html(resp);

                                    var request3 = $.ajax({
                                        url: '/LlamadasAjax/ObtenerCotizacionesFinalizadasAdmin'
                               ");
            WriteLiteral(@"     });
                                    request3.done(function (resp) {
                                        $(""#tbodycotizacion"").html(resp);
                                    });
                                    const Toast = Swal.mixin({
                                        toast: true,
                                        position: 'top-end',
                                        showConfirmButton: false,
                                        timer: 3000,
                                        timerProgressBar: true,
                                        didOpen: (toast) => {
                                            toast.addEventListener('mouseenter', Swal.stopTimer)
                                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                                        }
                                    })

                                    Toast.fire({
                                        icon: 'success',
         ");
            WriteLiteral(@"                               title: 'Se actualizo con exito'
                                    })
                                });
                            }
                            else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: 'Algo salio mal!',
                                    //footer: '<a href="""">Why do I have this issue?</a>'
                                })
                            }
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'La cantidad debe ser mayor a cero!'
                            //footer: '<a href="""">Why do I have this issue?</a>'
                        })
                    }
                } else {
                    Swal.fi");
            WriteLiteral(@"re({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Asegurese de ingresar una cantidad!'
                        //footer: '<a href="""">Why do I have this issue?</a>'
                    })
                }
            })
        });

        $(""body"").on(""click"", "".eliminaritemdetallecotizacion"", function (e) {
            var $this = $(this)
            e.preventDefault();
            iddetallecotizacion = $this.data(""iddetallecotizacion"");
            idcotizacion = $this.data(""idcotizacion"");

            Swal.fire({
                title: 'Estas seguro?',
                text: ""No podrás revertir esto!"",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                cancelButtonText: 'Cancelar',
                confirmButtonText: 'Si, eliminar producto!'
            }).then((result) => {
             ");
            WriteLiteral(@"   if (result.isConfirmed) {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })

                    Toast.fire({
                        icon: 'success',
                        title: 'Se elimino con exito'
                    })

                    var request1 = $.ajax({
                        url: '/LlamadasAjax/EliminarItemDetalleCotizacionAdmin?iddetallecotizacion=' + iddetallecotizacion
                    });
                    request1.done(function (resp) {
                        if (resp == true) {
         ");
            WriteLiteral(@"                   var request = $.ajax({
                                url: '/LlamadasAjax/ObtenerDetalleCotizacionAdmin?idcotizacion=' + idcotizacion
                            });
                            request.done(function (resp) {
                                $(""#tbodylistaproductosacotizar"").html(resp);

                                var request3 = $.ajax({
                                    url: '/LlamadasAjax/ObtenerCotizacionesFinalizadasAdmin'
                                });
                                request3.done(function (resp) {
                                    $(""#tbodycotizacion"").html(resp);
                                });
                                const Toast = Swal.mixin({
                                    toast: true,
                                    position: 'top-end',
                                    showConfirmButton: false,
                                    timer: 3000,
                                    timerProgressBar");
            WriteLiteral(@": true,
                                    didOpen: (toast) => {
                                        toast.addEventListener('mouseenter', Swal.stopTimer)
                                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                                    }
                                })

                                Toast.fire({
                                    icon: 'success',
                                    title: 'Se elimino con exito'
                                })
                            });
                        }
                        else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Algo salio mal!',
                                //footer: '<a href="""">Why do I have this issue?</a>'
                            })
                        }
                    });

                }
     ");
            WriteLiteral(@"       })
        });

        $(""#btnagregarproducto"").click(function (e) {
            e.preventDefault();
            var request = $.ajax({
                url: '/LlamadasAjax/ObtenerListaDeProductosParaAgregarAPedido'
            });
            request.done(function (resp) {
                $(""#tbodylistaproductos"").html(resp);
            });

        });

        $(""body"").on(""click"", "".agregarproductoapedido"", function (e) {
            var $this = $(this)
            e.preventDefault();
            var idproducto = $this.data(""idproducto"");

            var request = $.ajax({
                url: '/LlamadasAjax/AgregarProductoAPedido?idpedido=' + idpedido + '&&idproducto=' + idproducto
            });
            request.done(function (resp) {
                if (resp == true) {
                    var request1 = $.ajax({
                        url: '/LlamadasAjax/ObtenerDetallePedidoAdmin?idpedido=' + idpedido
                    });
                    request1.done(fun");
            WriteLiteral(@"ction (resp) {
                        $(""#detallpedido"").html(resp);
                    });
                    var request3 = $.ajax({
                        url: '/LlamadasAjax/ObtenerPedidosNuevosAdmin'
                    });
                    request3.done(function (resp) {
                        $(""#tbodynuevospedidos"").html(resp);
                    });

                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })

                    Toast.fire({
                        icon: 'success',
                        title: ");
            WriteLiteral("\'Se agregó con exito\'\r\n                    })\r\n                }\r\n            });\r\n        });\r\n\r\n</script>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
